Сенимар 1:
        homework1:
                tack2
                    // Напишите программу, которая на вход принимает два числа и выдаёт, какое число большее, а какое меньшее.
                    // Пример:
                    / a = 5; b = 7 -> max = 7
                    // a = 2 b = 10 -> max = 10
                    // a = -9 b = -3 -> max = -3

                task4
                    // Напишите программу, которая принимает на вход три числа и выдаёт максимальное из этих чисел.
                    // Пример:
                    // 2, 3, 7 -> 7
                    // 44 5 78 -> 78
                    // 22 3 9 -> 22
                task6
                    // Напишите программу, которая на вход принимает число и выдаёт, является ли число чётным (делится ли оно на два без остатка).
                    // Пример:
                    // 4 -> да
                    // -3 -> нет
                    // 7 -> нет
                task8
                    // Напишите программу, которая на вход принимает число (N), а на выходе показывает все чётные числа от 1 до N.
                    // Пример:
                    // 5 -> 2, 4
                    // 8 -> 2, 4, 6, 8

        seminar1:
                task0
                    // Напишите програму, которая на вход принимает число и выдает его квадрат (число умноженное на само себя).
                    // Например:
                    // 4 -> 16
                    // -3 -> 9
                    // _7 -> 49
                task1
                    // Напишите программу, которая на вход принимает два числа и проверяет, является ли первое число квадратом второго.
                    // a = 25 , b = 5 -> да 
                    // a = 2 , b = 10 -> нет
                    // a = 9 , b = -3 -> да
                    // a = -3 , b = 9 -> нет
                tssk2
                    // Напишите программу, которая будет выдавать название дня недели по заданному номеру.
                    // 3 -> среда
                    // 5 -> пятница
                task3
                    // Напишите программу, которая на вход принимает одно число (N), а на выходе показывает все целые числа в промежутке от -N до N.
                    // 4 -> "-4, -3, -1, 0, 1, 2, 3, 4"
                    // 2 -> "-2, -1, 0, 1, 2"
                task4
                    // Напишите программу, которая принимает на вход трехзначное число и на выходе показывает последнюю цифру этого числа.
                    // 456 -> 6
                    // 782 -> 2
Семинар 2:
        homework2:
                task10
                    // Напишите программу, которая принимает на вход трёхзначное число 
                    // и на выходе показывает вторую цифру этого числа.
                    // 456 -> 5
                    // 782 -> 8
                    // 918 -> 1
                task13
                    // Напишите программу, которая выводит третью цифру заданного числа или сообщает, 
                    // что третьей цифры нет.
                    // 645 -> 5
                    // 78 -> третьей цифры нет
                    // 32679 -> 6
                task15
                    //  Напишите программу, которая принимает на вход цифру, обозначающую день недели, и 
                    //  проверяет, является ли этот день выходным.
                    // 6 -> да
                    // 7 -> да
                    // 1 -> нет
        lesson2:
                function
                    // Найти максимум из 9 чисел
                    // Стихийный подход
                function2
                    // Найти максимум из 9 чисел
                    // Введем функцию(метод)
                function3
                    //  Найти максимум из 9 чисел
                    // Введем массив
                function4_array
                    // Поиск позиции нужного нам элемента массива. 
                    //Реализуем задачу для любого количетва переменных.
                function4_array2
                    // запишем код с использованием генетарора псевдослучайных 
                    //чисел и методов
        seminar2
                task9
                    // Напишите программу, которая выводит случайное число 
                    //из отрезка [10, 99] и показывает наибольшую цифру.
                    // 78 -> 8
                    // 12 -> 2
                task11
                    // Напишите программу, которая выводит случайное трехзначное
                    //число и удаляет вторую цифру этого числа.
                    // 456 -> 46
                    // 782 -> 72
                task12
                    // Напишите программу, которая будет принимать на вход два числа и выводить, является ли 
                    // первое число кратно второму. Если число 1 не кратно чсислу 2, то программа выводит 
                    // остаток от деления.
                    // 34, 5 -> не кратно, остаток 4
                    // 16, 4 -> кратно
                task14
                    // Напишите программу, которая принимает на вход число и проверяет, 
                    //кратно ли оно одновременно 7 и 23.
                    // 14 -> нет
                    // 46 -> нет
                    // 161 -> да
                task16
                    // Напишите программу, которая принимает на вход два числа и проверяет, 
                    // является ли одно число квадратом другого.
                    // 5, 25 -> да
                    // -4, 16 -> да
                    // 25, 5 -> да
                    // 8,9 -> нет
Семинар 3:
        homework3:
                task19
                    // Напишите программу, которая принимает на вход пятизначное число и 
                    // проверяет, является ли оно палиндромом.
                    // 14212 -> нет
                    // 12821 -> да
                    // 23432 -> да
                task21
                    // Напишите программу, которая принимает на вход координаты двух точек
                    //  и находит расстояние между ними в 3D пространстве.
                    // A (3,6,8); B (2,1,-7), -> 15.84
                    // A (7,-5, 0); B (1,-1,9) -> 11.53
                task23
                    // Напишите программу, которая принимает на вход число (N)
                    //  и выдаёт таблицу кубов чисел от 1 до N.
                    // 3 -> 1, 8, 27
                    // 5 -> 1, 8, 27, 64, 125
        lesson3:
                cycle
                    // Вывод таблицы умножения на экран с помощью цикла в цикле
                method
                    //описание 4х типов методов
                sorting_minmax
                    // алгоритм сортировки методом выбора(минимальный максимальный)
                sorting_minmax2
                    //еще пример метода
                task_edittext
                    //Дан текст. В тексте нужно все пробелы заменить черточками, 
                    //маленькие буквы "к" заменить большими "К", а большие "С"
                    // заменить маленькими "с".
        seminar3:
                task_addtask
                    // Написать метод для разворота массива,
                    // не используя память под дополнительный массив
                task17
                    //напишите программу, которая принимает на вход координаты точки (X и Y),
                    // причем X != 0 и Y != 0 и выдает номер четверти плоскости, 
                    // в которой находится эта точка.
                task18
                    // Напишите программу, которая по заданному номеру четверти, 
                    // показывает диапазон возможных коррдинат точек в этой четверти (x и y)
                task20
                    // Напишите программу, которая принимает на вход координаты двух точек и
                    // находит расстояние между ними в 2D пространстве.
                    // A (3,6); B (2,1) -> 5,09
                    // A (7,-5); B (1,-1) -> 7,21
                task22
                    // Напишите программу, которая принимает на вход число (N) и 
                    //выдаёт таблицу квадратов чисел от 1 до N.
                    // 5 -> 1, 4, 9, 16, 25.
                    // 2 -> 1,4
Семинар 4:
        seminar4:
                task24
                    // Напишите программу, которая принимает на вход число (А) и 
                    // выдаёт сумму чисел от 1 до А.
                    // 7 -> 28
                    // 4 -> 10      решаем с помощью методов
                    // 8 -> 36
                task26
                    // Напишите программу, которая принимает на вход число и выдаёт количество цифр в числе.
                    // 456 -> 3
                    // 78 -> 2
                    // 89126 -> 5
                task28
                    // Напишите программу, которая принимает на вход число N и выдаёт 
                    // произведение чисел от 1 до N.
                    // 4 -> 24
                    // 5 -> 120
                task30
                    // Напишите программу, которая выводит массив из 8 элементов, 
                    // заполненный нулями и единицами в случайном порядке.
                    // [1,0,1,1,0,1,0,0]
                task_dop
                    // отсортировать принимаемый массив по возврастанию
        homework4:
                task25
                    //  Напишите цикл, который принимает на вход два числа (A и B) и возводит
                    // число A в натуральную степень B.
                    // 3, 5 -> 243 (3⁵)
                    // 2, 4 -> 16            
                task27
                    //Напишите программу, которая принимает на вход число и выдаёт сумму цифр в числе.
                    // 452 -> 11
                    // 82 -> 10
                    // 9012 -> 12
                task29
                    // Напишите программу, которая задаёт массив из 8 элементов и выводит их на экран. 
                    // Данные вводятся с консоли пользователем
Семинар5:
        seminar5:
                task31            
                    // : Задайте массив из 12 элементов, заполненный случайными числами из промежутка [-9, 9]. 
                    // Найдите сумму отрицательных и положительных элементов массива.
                    // Например, в массиве [3,9,-8,1,0,-7,2,-1,8,-3,-1,6] сумма положительных чисел равна 29,
                    //  сумма отрицательных равна -20. 
                     +метод с возвращением кортежа 
                task32
                    //Напишите программу замена элементов массива: положительные элементы замените 
                    //на соответствующие отрицательные, и наоборот.
                    //[-4, -8, 8, 2] -> [4, 8, -8, -2]
                task33
                    //  Задайте массив. Напишите программу, которая определяет, присутствует ли заданное число в массиве.
                    // 4; массив [6, 7, 19, 345, 3] -> нет
                    // -3; массив [6, 7, 19, 345, 3] -> да
                task37
                    //  Найдите произведение пар чисел в одномерном массиве. Парой считаем первый
                    //  и последний элемент, второй и предпоследний и т.д. 
                    // Результат запишите в новом массиве.
                    // [1 2 3 4 5] -> 5 8 3
                    // [6 7 3 6] -> 36 21
        homework5:
                task34
                    // Задайте массив заполненный случайными положительными трёхзначными числами. 
                    // Напишите программу, которая покажет количество чётных чисел в массиве.
                    // [345, 897, 568, 234] -> 2
                task35
                    // Задайте одномерный массив из 123 случайных чисел в диапазоне [0, 150]. 
                    // Найдите количество элементов массива, значения которых лежат в отрезке [10,99].
                    // Пример для массива из 5, а не 123 элементов. В своём решении сделайте для 123
                    // [5, 18, 123, 6, 2] -> 1
                    // [1, 2, 3, 6, 2] -> 0
                    // [10, 11, 12, 13, 14] -> 5
                task36
                    // : Задайте одномерный массив, заполненный случайными числами. 
                    //  Найдите сумму элементов,  стоящих на нечётных позициях.
                    // [3, 7, 23, 12] -> 19
                    // [-4, -6, 89, 6] -> 0
                task38
                    // Задайте массив натуральных чисел. Найдите разницу между максимальным и 
                    // минимальным элементов массива.
                    // [3 7 22 2 78] -> 76
Лекция5:
                factorial
                    // рекурсия вычисления факториала
                FibonacciNumbers
                    // рекурсия на примере чисел Фибоначчи 
                picture
                    // алгоритм для закрашивания внутренней области картинки
                td_array
                    // Создаем двумерный массив

Семинар6:
                task39
                    //  Напишите программу, которая перевернёт одномерный массив (последний элемент
                    //  будет на первом месте, а первый - на последнем и т.д.)
                    // [1 2 3 4 5] -> [5 4 3 2 1]
                    // [6 7 3 6] -> [6 3 7 6]
                task40
                    // Напишите программу, которая принимает на вход три числа и проверяет, может ли
                    // существовать треугольник с сторонами такой длины.
                    // Теорема о неравенстве треугольника: каждая сторона треугольника меньше суммы двух
                    // других сторон.   
                task42  
                    // Напишите программу, которая будет преобразовывать десятичное число в двоичное.
                    // 45 -> 101101
                    // 3 -> 11
                    // 2 -> 10
                task44
                    //  Не используя рекурсию, выведите первые N чисел Фибоначчи. Первые два 
                    // числа Фибоначчи: 0 и 1.
                    // Если N = 5 -> 0 1 1 2 3
                    // Если N = 3 -> 0 1 1
                    // Если N = 7 -> 0 1 1 2 3 5 8
                task45
                    //  Напишите программу, которая будет создавать копию заданного массива 
                    //  с помощью поэлементного копирования.
        homework6:
                task41
                    //  Пользователь вводит с клавиатуры M чисел. Посчитайте, сколько 
                    // чисел больше 0 ввёл пользователь. Ввод чисел останавливается при помощи ввода 
                    // стоп-слова "stop"
                    // 0, 7, 8, -2, -2 -> 2
                    // 1, -7, 567, 89, 223-> 3        
                task43
                    //  Напишите программу, которая найдёт точку пересечения двух прямых, заданных 
                    // уравнениями y = k1 * x + b1, y = k2 * x + b2; значения b1, k1, b2 и k2 задаются пользователем.
                    // b1 = 2, k1 = 5, b2 = 4, k2 = 9 -> (-0,5; -0,5)
Семинар7:
        Семинар7
                task46
                    // Задача 46: Задайте двумерный массив размером m×n, 
                    // заполненный случайными целыми числами.
                    // m = 3, n = 4.
                    // 1 4 8 19
                    // 5 -2 33 -2
                    // 77 3 8 1
                task48
                    // Задача 48: Задайте двумерный массив размера m на n, каждый элемент 
                    // в массиве находится по формуле: Aₘₙ = m + n.Выведите полученный массив на экран.
                    // m = 3, n = 4.
                    // 0 1 2 3
                    // 1 2 3 4
                    // 2 3 4 5  
                task49
                    // Задача 49: Задайте двумерный массив. Найдите элементы, у которых оба индекса чётные, 
                    // и замените эти элементы на их квадраты.
                    // Например, изначально массив
                    // выглядел вот так:
                    // 1 4 7 2
                    // 5 9 2 3
                    // 8 4 2 4
                    // Новый массив будет выглядеть
                    // вот так:
                    // 1 4 7 2
                    // 5 81 2 9
                    // 8 4 2 4  
                task51        
                    // Задача 51: Задайте двумерный массив. Найдите сумму элементов, находящихся на 
                    // главной диагонали (с индексами (0,0); (1; 1) и т.д.
                    // Например, задан массив:
                    // 1 4 7 2
                    // 5 9 2 3
                    // 8 4 2 4
                    // Сумма элементов главной диагонали: 1+9+2 = 12
                    // Доп.условие для 51 задачи: сделать суммирование в один цикл.Матрица 
                    // может быть прямоугольный
        homework7
                task47
                    // Задача 47.Задайте двумерный массив размером m×n, 
                    // заполненный случайными вещественными числами.
                    // m = 3, n = 4.
                    // 0,5 7 -2 -0,2
                    // 1 -3,3 8 -9,9
                    // 8 7,8 -7,1 9            
                task50
                    // Задача 50.Напишите программу, которая на вход принимает позиции элемента в двумерном
                    // массиве, и возвращает значение этого элемента или же указание, что такого элемента нет.
                    // Например, задан массив:
                    // 1 4 7 2
                    // 5 9 2 3
                    // 8 4 2 4
                    // 1 7->такого числа в массиве нет   
                task52     
                    // Задача 52.Задайте двумерный массив из целых чисел. Найдите среднее
                    // арифметическое элементов в каждом столбце.
                    // Например, задан массив:
                    // 1 4 7 2
                    // 5 9 2 3
                    // 8 4 2 4
                    // Среднее арифметическое каждого столбца: 4,6; 5,6; 3,6; 3.
Семинар8
        семинар8            
                task53    
                    // Задайте двумерный массив. Напишите программу, которая поменяет 
                    // местами первую и последнюю строку массива.
                task55 
                    // Задайте двумерный массив. Напишите программу, которая заменяет строки на столбцы. 
                    // В случае, если это невозможно, программа должна вывести сообщение для пользователя.
                    // решим задачу созданием новой матрицы    
                task57 
                    // Составить частотный словарь элементов двумерного массива. Частотный словарь 
                    // содержит информацию о том, сколько раз встречается элемент входных данных.
                    // 1, 2, 3
                    // 4, 6, 1
                    // 2, 1, 6
                    // 1 встречается 3 раза
                    // 2 встречается 2 раз
                    // 3 встречается 1 раз
                    // 4 встречается 1 раз
                    // 6 встречается 2 раза
                    // В нашей исходной матрице встречаются элементы от 0 до 9v    
                task59 
                    // Задайте двумерный массив из целых чисел. Напишите программу, которая удалит 
                    // строку и столбец, на пересечении которых расположен наименьший элемент массива.
                    // Например, задан массив:
                    // 1 4 7 2
                    // 5 9 2 3
                    // 8 4 2 4
                    // 5 2 6 7
                    // Наименьший элемент - 1, на выходе получим
                    // следующий массив:
                    // 9 4 2
                    // 2 2 6
                    // 3 4 7    
                task61 
                    // : Вывести первые N строк треугольника Паскаля. Сделать 
                    // вывод в виде равнобедренного треугольника    
        homework8
                task54 
                    // Задача 54: Задайте двумерный массив. Напишите программу, которая 
                    // упорядочит по возрастанию элементы каждой строки двумерного массива.
                    // Например, задан массив:
                    // 1 4 7 2
                    // 5 9 2 3
                    // 8 4 2 4
                    // В итоге получается вот такой массив:
                    // 1 2 4 7
                    // 2 3 5 9
                    // 2 4 4 8    
                task56 
                    // Задача 56: Задайте прямоугольный двумерный массив. Напишите программу,
                    // которая будет находить строку с наименьшей суммой элементов.
                    // Например, задан массив:
                    // 1 4 7 2
                    // 5 9 2 3
                    // 8 4 2 4
                    // 5 2 6 7
                    // Программа считает сумму элементов в каждой строке и выдаёт номер строки
                    // с наименьшей суммой элементов: 1 строка  
                task58 
                    // Задача 58: Задайте две матрицы. Напишите программу, которая 
                    // будет находить произведение двух матриц.
                    // Например, заданы 2 массива:
                    // 1 4 7 2
                    // 5 9 2 3
                    // 8 4 2 4
                    // 5 2 6 7
                    // и
                    // 1 5 8 5
                    // 4 9 4 2
                    // 7 2 2 6
                    // 2 3 4 7
                    // Их произведение будет равно следующему массиву:
                    // 1 20 56 10
                    // 20 81 8 6
                    // 56 8 4 24
                    // 10 6 24 49 
                task60
                    // Сформируйте трёхмерный массив из неповторяющихся двузначных чисел. 
                    // Напишите программу, которая будет построчно выводить массив, 
                    // добавляя индексы каждого элемента.
                    // массив размером 2 x 2 x 2
                    // 12(0,0,0) 22(0,0,1)
                    // 45(1,0,0) 53(1,0,1)                     
                task62 
                    // Заполните спирально массив 4 на 4.
                    // Например, на выходе получается вот такой массив:
                    // 1 2 3 4
                    // 12 13 14 5
                    // 11 16 15 6
                    // 10 9 8 7  
Семинар9
        семинар9 
                task63
                    // Задайте значение N. Напишите программу, которая выведет
                    // все натуральные числа в промежутке от 1 до N.
                    // N = 5 -> "1, 2, 3, 4, 5"
                    // N = 6 -> "1, 2, 3, 4, 5, 6"        
                task65 
                    // Задайте значения M и N. Напишите программу, которая 
                    // выведет все натуральные числа в промежутке от M до N.
                    // M = 1; N = 5 -> "1, 2, 3, 4, 5"
                    // M = 4; N = 8 -> "4, 5, 6, 7, 8"     
                task67
                    //  Напишите программу, которая будет принимать на вход 
                    //  число и возвращать сумму его цифр.
                    //  453 -> 12
                    //  45 -> 9     
                task69
                    //  Напишите программу, которая на вход принимает два числа A и B, и 
                    // возводит число А в целую степень B с помощью рекурсии.
                    // A = 3; B = 5 -> 243 (3⁵)
                    // A = 2; B = 3 -> 8         
        homework9
                task64 
                    //  Задайте значение N. Напишите программу, которая выведет все 
                    // натуральные числа в промежутке от N до 1.
                    // N = 5 -> "5, 4, 3, 2, 1"
                    // N = 8 -> "8, 7, 6, 5, 4, 3, 2, 1"  
                task66
                    // Задайте значения M и N. Напишите программу, которая найдёт сумму
                    //  натуральных элементов в промежутке от M до N.
                    // M = 1; N = 15 -> 120
                    // M = 4; N = 8. -> 30              
                task68
                    //  Напишите программу вычисления функции Аккермана с помощью рекурсии.
                    //  Даны два неотрицательных числа m и n.
                    // m = 2, n = 3 -> A(m,n) = 9
                    // m = 3, n = 2 -> A(m,n) = 29    